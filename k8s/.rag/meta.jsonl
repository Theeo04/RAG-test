{"path": "k8s/apache-benchmark-latency-test/README.md", "file_id": "k8s/apache-benchmark-latency-test/README.md", "component": "apache-benchmark-latency-test", "type": "readme", "profile": null, "k8s_kinds": [], "yaml_keys": [], "text": "### Apache Benchmark\nUsed to test nginx latency\n\nImage Docker Hub Link: https://hub.docker.com/r/jordi/ab ", "bm25_text": "### Apache Benchmark\nUsed to test nginx latency\n\nImage Docker Hub Link: https://hub.docker.com/r/jordi/ab "}
{"path": "k8s/apache-benchmark-latency-test/common.yaml", "file_id": "k8s/apache-benchmark-latency-test/common.yaml", "component": "apache-benchmark-latency-test", "type": "manifest", "profile": null, "k8s_kinds": [], "yaml_keys": [], "text": "image:\n  repository: internal/popp/apache-benchmark\n  tag: 2.0.0\n\nmam: \n  dc: {{ .Env.MAM_DC }}\n  stage: {{ .Env.MAM_STAGE }}\n  brand: {{ .Env.MAM_BRAND }}\n\nglobal:\n  app:\n    name: {{ .Env.ARTIFACT_ID }}\n    groupId: no.group.id\n    monitoring:\n      activate: false\n\npdb:\n  enabled: false\n\ncommandOverride: [\"/bin/sh\", \"-c\"]\nextraArgs:\n  - |\n    while true; do\n      ab -n 1 -c 1 -H \"Host: latency-test.com\" http://pc-test-cass-restore-dev01.po.server.lan:8080/ || true\n      sleep 1\n    done\n\nreplicaCount: 5", "bm25_text": "image:\n  repository: internal/popp/apache-benchmark\n  tag: 2.0.0\n\nmam: \n  dc: \"__TEMPLATE__\"\n  stage: \"__TEMPLATE__\"\n  brand: \"__TEMPLATE__\"\n\nglobal:\n  app:\n    name: \"__TEMPLATE__\"\n    groupId: no.group.id\n    monitoring:\n      activate: false\n\npdb:\n  enabled: false\n\ncommandOverride: [\"/bin/sh\", \"-c\"]\nextraArgs:\n  - |\n    while true; do\n      ab -n 1 -c 1 -H \"Host: latency-test.com\" http://pc-test-cass-restore-dev01.po.server.lan:8080/ || true\n      sleep 1\n    done\n\nreplicaCount: 5"}
{"path": "k8s/nginx-latency-test/README.md", "file_id": "k8s/nginx-latency-test/README.md", "component": "nginx-latency-test", "type": "readme", "profile": null, "k8s_kinds": [], "yaml_keys": [], "text": "NGINX Deployment for network latency testing\n", "bm25_text": "NGINX Deployment for network latency testing\n"}
{"path": "k8s/nginx-latency-test/files/available_latency_vhost.conf", "file_id": "k8s/nginx-latency-test/files/available_latency_vhost.conf", "component": "nginx-latency-test", "type": "config", "profile": null, "k8s_kinds": [], "yaml_keys": [], "text": "server {\n  listen 8080;\n  server_name latency-test.com;\n\n  root  /var/www/html/latency-test.com;\n  index index.txt;\n\n  # Disable caching with HTTP headers\n  add_header Cache-Control \"no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0\";\n  add_header Pragma \"no-cache\";\n  add_header Expires 0;\n\n  access_log /var/log/nginx/access.log prom;\n\n  error_log  /dev/stderr warn;\n\n  location / {\n    try_files $uri $uri/ =404;\n  }\n}\n", "bm25_text": "server {\n  listen 8080;\n  server_name latency-test.com;\n\n  root  /var/www/html/latency-test.com;\n  index index.txt;\n\n  # Disable caching with HTTP headers\n  add_header Cache-Control \"no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0\";\n  add_header Pragma \"no-cache\";\n  add_header Expires 0;\n\n  access_log /var/log/nginx/access.log prom;\n\n  error_log  /dev/stderr warn;\n\n  location / {\n    try_files $uri $uri/ =404;\n  }\n}\n"}
{"path": "k8s/nginx-latency-test/files/enable_latency_vhost.conf", "file_id": "k8s/nginx-latency-test/files/enable_latency_vhost.conf", "component": "nginx-latency-test", "type": "config", "profile": null, "k8s_kinds": [], "yaml_keys": [], "text": "server {\n  listen 8080;\n  server_name latency-test.com;\n\n  root  /var/www/html/latency-test.com;\n  index index.txt;\n\n  # Disable caching with HTTP headers\n  add_header Cache-Control \"no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0\";\n  add_header Pragma \"no-cache\";\n  add_header Expires 0;\n\n  access_log /var/log/nginx/access.log prom;\n\n  error_log  /dev/stderr warn;\n\n  location / {\n    try_files $uri $uri/ =404;\n  }\n}\n", "bm25_text": "server {\n  listen 8080;\n  server_name latency-test.com;\n\n  root  /var/www/html/latency-test.com;\n  index index.txt;\n\n  # Disable caching with HTTP headers\n  add_header Cache-Control \"no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0\";\n  add_header Pragma \"no-cache\";\n  add_header Expires 0;\n\n  access_log /var/log/nginx/access.log prom;\n\n  error_log  /dev/stderr warn;\n\n  location / {\n    try_files $uri $uri/ =404;\n  }\n}\n"}
{"path": "k8s/nginx-latency-test/files/nginx.conf", "file_id": "k8s/nginx-latency-test/files/nginx.conf", "component": "nginx-latency-test", "type": "config", "profile": null, "k8s_kinds": [], "yaml_keys": [], "text": "worker_processes auto;\npid /tmp/nginx.pid;\n\nevents {\n  worker_connections 1024;\n}\n\nhttp {\n  include       /etc/nginx/mime.types;\n  default_type  application/octet-stream;\n\n  sendfile on;\n  keepalive_timeout 65;\n\n  log_format prom '$remote_addr - $remote_user [$time_local] '\n                  '\"$request\" $status $body_bytes_sent '\n                  '\"$http_referer\" \"$http_user_agent\" '\n                  'rt=$request_time';\n\n  access_log /var/log/nginx/access.log prom;\n\n  server_tokens off;\n\n  include /etc/nginx/sites-enabled/*;\n}\n", "bm25_text": "worker_processes auto;\npid /tmp/nginx.pid;\n\nevents {\n  worker_connections 1024;\n}\n\nhttp {\n  include       /etc/nginx/mime.types;\n  default_type  application/octet-stream;\n\n  sendfile on;\n  keepalive_timeout 65;\n\n  log_format prom '$remote_addr - $remote_user [$time_local] '\n                  '\"$request\" $status $body_bytes_sent '\n                  '\"$http_referer\" \"$http_user_agent\" '\n                  'rt=$request_time';\n\n  access_log /var/log/nginx/access.log prom;\n\n  server_tokens off;\n\n  include /etc/nginx/sites-enabled/*;\n}\n"}
{"path": "k8s/nginx-latency-test/values/common.yaml", "file_id": "k8s/nginx-latency-test/values/common.yaml", "component": "nginx-latency-test", "type": "values", "profile": "common", "k8s_kinds": [], "yaml_keys": ["configMaps", "configMaps.available-latency", "configMaps.available-latency.content", "configMaps.available-latency.content.latency-test.com", "configMaps.available-latency.mountPath", "configMaps.available-latency.subPath", "configMaps.available-latency.triggerReload", "configMaps.enable-latency", "configMaps.enable-latency.content", "configMaps.enable-latency.content.latency-test.com", "configMaps.enable-latency.mountPath", "configMaps.enable-latency.subPath", "configMaps.enable-latency.triggerReload", "configMaps.factscript", "configMaps.factscript.content", "configMaps.factscript.content.fetchdatanode.sh", "configMaps.factscript.mountPath", "configMaps.factscript.subPath", "configMaps.factscript.triggerReload", "configMaps.nginx-conf", "configMaps.nginx-conf.content", "configMaps.nginx-conf.content.nginx.conf", "configMaps.nginx-conf.mountPath", "configMaps.nginx-conf.subPath", "configMaps.nginx-conf.triggerReload", "configMaps.nginxlogexporter", "configMaps.nginxlogexporter.content", "configMaps.nginxlogexporter.content.config.tmpl.hcl", "configMaps.nginxlogexporter.mountPath", "configMaps.nginxlogexporter.subPath", "configMaps.nginxlogexporter.triggerReload", "global", "global.app", "global.app.groupId", "global.app.monitoring", "global.app.monitoring.activate", "global.app.monitoring.path", "global.app.monitoring.port", "global.app.name", "image", "image.repository", "image.tag", "initContainers", "initContainers.init", "initContainers.init.args", "initContainers.init.command", "initContainers.init.env", "initContainers.init.env.valueFrom", "initContainers.init.env.valueFrom.fieldRef", "initContainers.init.env.valueFrom.fieldRef.fieldPath", "initContainers.init.image", "initContainers.init.volumeMounts", "initContainers.init.volumeMounts.mountPath", "initContainers.init.volumeMounts.subPath", "mam", "mam.brand", "mam.dc", "mam.stage", "pdb", "pdb.enabled", "sidecars", "sidecars.nginxlogexporter", "sidecars.nginxlogexporter.args", "sidecars.nginxlogexporter.image", "sidecars.nginxlogexporter.imagePullPolicy", "sidecars.nginxlogexporter.ports", "sidecars.nginxlogexporter.ports.containerPort", "sidecars.nginxlogexporter.volumeMounts", "sidecars.nginxlogexporter.volumeMounts.mountPath", "sidecars.nginxlogexporter.volumeMounts.readOnly", "volumes", "volumes.cache", "volumes.cache.emptyDir", "volumes.cache.mountPath", "volumes.html-index", "volumes.html-index.emptyDir", "volumes.html-index.mountPath", "volumes.nginx-logs", "volumes.nginx-logs.emptyDir", "volumes.nginx-logs.mountPath", "volumes.work", "volumes.work.emptyDir", "volumes.work.mountPath"], "text": "image:\n  repository: internal/popp/nginx\n  tag: 1.29.1\n\nsidecars:\n  nginxlogexporter:\n    image: \"internal/popp/nginxlog-exporter:1.0.0\"\n    imagePullPolicy: IfNotPresent\n    args:\n      - -config-file\n      - /work/config.hcl\n    ports:\n      - name: metrics\n        containerPort: 4040\n    volumeMounts:\n    - name: work\n      mountPath: /work\n    - name: nginx-logs\n      mountPath: /var/log/nginx\n      readOnly: true\n\nmam: \n  dc: {{ .Env.MAM_DC }}\n  stage: {{ .Env.MAM_STAGE }}\n  brand: {{ .Env.MAM_BRAND }}\n\nglobal:\n  app:\n    name: {{ .Env.ARTIFACT_ID }}\n    groupId: no.group.id\n    monitoring:\n      activate: true\n      path: /metrics\n      port: 4040\n\n\nvolumes:\n  cache:\n    mountPath: /var/cache/nginx\n    emptyDir: {}\n  html-index:\n    mountPath: /var/www/html/latency-test.com\n    emptyDir: {}\n  work:\n    mountPath: /work\n    emptyDir: {}\n  nginx-logs:\n    mountPath: /var/log/nginx\n    emptyDir: {}\n\ninitContainers:\n  init:\n    image: library/busybox:1.36.1\n    command: [\"/bin/sh\", \"", "bm25_text": "image:\n  repository: internal/popp/nginx\n  tag: 1.29.1\n\nsidecars:\n  nginxlogexporter:\n    image: \"internal/popp/nginxlog-exporter:1.0.0\"\n    imagePullPolicy: IfNotPresent\n    args:\n      - -config-file\n      - /work/config.hcl\n    ports:\n      - name: metrics\n        containerPort: 4040\n    volumeMounts:\n    - name: work\n      mountPath: /work\n    - name: nginx-logs\n      mountPath: /var/log/nginx\n      readOnly: true\n\nmam: \n  dc: \"__TEMPLATE__\"\n  stage: \"__TEMPLATE__\"\n  brand: \"__TEMPLATE__\"\n\nglobal:\n  app:\n    name: \"__TEMPLATE__\"\n    groupId: no.group.id\n    monitoring:\n      activate: true\n      path: /metrics\n      port: 4040\n\n\nvolumes:\n  cache:\n    mountPath: /var/cache/nginx\n    emptyDir: {}\n  html-index:\n    mountPath: /var/www/html/latency-test.com\n    emptyDir: {}\n  work:\n    mountPath: /work\n    emptyDir: {}\n  nginx-logs:\n    mountPath: /var/log/nginx\n    emptyDir: {}\n\ninitContainers:\n  init:\n    image: library/busybox:1.36.1\n    command: [\"/bin/sh\", \""}
{"path": "k8s/nginx-latency-test/values/common.yaml", "file_id": "k8s/nginx-latency-test/values/common.yaml", "component": "nginx-latency-test", "type": "values", "profile": "common", "k8s_kinds": [], "yaml_keys": [], "text": "-c\"]\n    args:\n      - |\n        set -euo pipefail\n        sh /var/www/html/latency-test.com/fetchdatanode.sh\n        sed \"s/__NODE_NAME__/${KUBERNETES_NODE_NAME}/g\" /work/config.tmpl.hcl > /work/config.hcl\n        chmod 0444 /work/config.hcl\n        echo \"[init] Rendered /work/config.hcl with node=${KUBERNETES_NODE_NAME}\"\n    env:\n      - name: KUBERNETES_NODE_NAME\n        valueFrom:\n          fieldRef:\n            fieldPath: spec.nodeName\n    volumeMounts:\n      - name: html-index\n        mountPath: /var/www/html/latency-test.com\n      - name: factscript\n        mountPath: /var/www/html/latency-test.com/fetchdatanode.sh\n        subPath: fetchdatanode.sh\n      - name: nginxlogexporter\n        mountPath: /work/config.tmpl.hcl\n        subPath: config.tmpl.hcl\n      - name: work\n        mountPath: /work \n\npdb:\n  enabled: false\n\nconfigMaps:\n  nginxlogexporter:\n    triggerReload: true\n    mountPath: /work/config.tmpl.hcl\n    subPath: config.tmpl.hcl\n    content:\n      config.tmpl.hcl: |\n  ", "bm25_text": "-c\"]\n    args:\n      - |\n        set -euo pipefail\n        sh /var/www/html/latency-test.com/fetchdatanode.sh\n        sed \"s/__NODE_NAME__/${KUBERNETES_NODE_NAME}/g\" /work/config.tmpl.hcl > /work/config.hcl\n        chmod 0444 /work/config.hcl\n        echo \"[init] Rendered /work/config.hcl with node=${KUBERNETES_NODE_NAME}\"\n    env:\n      - name: KUBERNETES_NODE_NAME\n        valueFrom:\n          fieldRef:\n            fieldPath: spec.nodeName\n    volumeMounts:\n      - name: html-index\n        mountPath: /var/www/html/latency-test.com\n      - name: factscript\n        mountPath: /var/www/html/latency-test.com/fetchdatanode.sh\n        subPath: fetchdatanode.sh\n      - name: nginxlogexporter\n        mountPath: /work/config.tmpl.hcl\n        subPath: config.tmpl.hcl\n      - name: work\n        mountPath: /work \n\npdb:\n  enabled: false\n\nconfigMaps:\n  nginxlogexporter:\n    triggerReload: true\n    mountPath: /work/config.tmpl.hcl\n    subPath: config.tmpl.hcl\n    content:\n      config.tmpl.hcl: |\n  "}
{"path": "k8s/nginx-latency-test/values/common.yaml", "file_id": "k8s/nginx-latency-test/values/common.yaml", "component": "nginx-latency-test", "type": "values", "profile": "common", "k8s_kinds": [], "yaml_keys": [], "text": "      listen { port = 4040 }\n        namespace \"nginx\" {\n          source { files = [\"/var/log/nginx/access.log\"] }\n          format = \"$remote_addr - $remote_user [$time_local] \\\"$request\\\" $status $body_bytes_sent \\\"$http_referer\\\" \\\"$http_user_agent\\\" rt=$request_time\"\n          histogram_buckets = [.005,.01,.025,.05,.1,.25,.5,1,2.5,5,10]\n          labels {\n            node = \"__NODE_NAME__\"\n            job=\"test-cluster-latency\"\n          }\n        }\n\n  factscript:\n    triggerReload: true\n    mountPath: /var/www/html/latency-test.com/fetchdatanode.sh\n    subPath: fetchdatanode.sh\n    content:\n      fetchdatanode.sh: |\n        #!/bin/sh\n        set -eu\n        OUT=\"/var/www/html/latency-test.com\"\n        mkdir -p \"$OUT\"\n        echo \"${KUBERNETES_NODE_NAME}\" > \"$OUT/index.txt\" \n        echo \"Generated $OUT/index.txt with WORKER-NODE=${KUBERNETES_NODE_NAME}\"\n\n  enable-latency:\n    triggerReload: true\n    mountPath: /etc/nginx/sites-enabled/latency-test.com\n    subPath: latency-test.c", "bm25_text": "      listen { port = 4040 }\n        namespace \"nginx\" {\n          source { files = [\"/var/log/nginx/access.log\"] }\n          format = \"$remote_addr - $remote_user [$time_local] \\\"$request\\\" $status $body_bytes_sent \\\"$http_referer\\\" \\\"$http_user_agent\\\" rt=$request_time\"\n          histogram_buckets = [.005,.01,.025,.05,.1,.25,.5,1,2.5,5,10]\n          labels {\n            node = \"__NODE_NAME__\"\n            job=\"test-cluster-latency\"\n          }\n        }\n\n  factscript:\n    triggerReload: true\n    mountPath: /var/www/html/latency-test.com/fetchdatanode.sh\n    subPath: fetchdatanode.sh\n    content:\n      fetchdatanode.sh: |\n        #!/bin/sh\n        set -eu\n        OUT=\"/var/www/html/latency-test.com\"\n        mkdir -p \"$OUT\"\n        echo \"${KUBERNETES_NODE_NAME}\" > \"$OUT/index.txt\" \n        echo \"Generated $OUT/index.txt with WORKER-NODE=${KUBERNETES_NODE_NAME}\"\n\n  enable-latency:\n    triggerReload: true\n    mountPath: /etc/nginx/sites-enabled/latency-test.com\n    subPath: latency-test.c"}
{"path": "k8s/nginx-latency-test/values/common.yaml", "file_id": "k8s/nginx-latency-test/values/common.yaml", "component": "nginx-latency-test", "type": "values", "profile": "common", "k8s_kinds": [], "yaml_keys": [], "text": "om\n    content:\n      latency-test.com: |\n{{ file.Read \"files/enable_latency_vhost.conf\" | indent 8 }}\n\n  available-latency:\n    triggerReload: true\n    mountPath: /etc/nginx/sites-available/latency-test.com\n    subPath: latency-test.com\n    content:\n      latency-test.com: |\n{{ file.Read \"files/available_latency_vhost.conf\" | indent 8 }}\n\n  nginx-conf:\n    triggerReload: true\n    mountPath: /etc/nginx/nginx.conf\n    subPath: nginx.conf\n    content:\n      nginx.conf: |\n{{ file.Read \"files/nginx.conf\" | indent 8 }}\n", "bm25_text": "om\n    content:\n      latency-test.com: |\n\"__TEMPLATE__\"\n\n  available-latency:\n    triggerReload: true\n    mountPath: /etc/nginx/sites-available/latency-test.com\n    subPath: latency-test.com\n    content:\n      latency-test.com: |\n\"__TEMPLATE__\"\n\n  nginx-conf:\n    triggerReload: true\n    mountPath: /etc/nginx/nginx.conf\n    subPath: nginx.conf\n    content:\n      nginx.conf: |\n\"__TEMPLATE__\""}
{"path": "k8s/webtest/README.md", "file_id": "k8s/webtest/README.md", "component": "webtest", "type": "readme", "profile": null, "k8s_kinds": [], "yaml_keys": [], "text": "# webtest\n\nWeb site for testing.\n", "bm25_text": "# webtest\n\nWeb site for testing.\n"}
{"path": "k8s/webtest/files/dump.py", "file_id": "k8s/webtest/files/dump.py", "component": "webtest", "type": "config", "profile": null, "k8s_kinds": [], "yaml_keys": [], "text": "from mod_python import apache\nimport yaml\n\ndef index(req):\n    req.content_type = \"text/html\"\n    out = '<!DOCTYPE html>\\n<html><head></head><body><pre>\\n'\n    out = out + 'METHOD:\\n{}\\n\\n'.format(req.method)\n    out = out + 'VERSION:\\n{}\\n\\n'.format(req.proto_num)\n    out = out + 'UNPARSED URI:\\n{}\\n\\n'.format(req.unparsed_uri)\n    out = out + 'URI:\\n{}\\n\\n'.format(req.uri)\n    out = out + 'ARGS:\\n{}\\n\\n'.format(req.args)\n    out = out + 'HEADERS IN:\\n{}\\n\\n'.format(yaml.safe_dump(dict(req.headers_in)))\n    if hasattr(req, 'cas'):\n        out = out + 'CAS:\\n{}\\n\\n'.format(yaml.safe_dump(req.cas))\n    out = out + 'FORM:\\n'\n    for f in req.form.list:\n        if f.filename:\n            v = 'FILE:{}'.format(f.filename)\n        else:\n            v = f.value\n        out = out + '{}: {}\\n'.format(f.name, v)\n    out = out + '\\n</pre></body></html>'\n    return out\n", "bm25_text": "from mod_python import apache\nimport yaml\n\ndef index(req):\n    req.content_type = \"text/html\"\n    out = '<!DOCTYPE html>\\n<html><head></head><body><pre>\\n'\n    out = out + 'METHOD:\\n{}\\n\\n'.format(req.method)\n    out = out + 'VERSION:\\n{}\\n\\n'.format(req.proto_num)\n    out = out + 'UNPARSED URI:\\n{}\\n\\n'.format(req.unparsed_uri)\n    out = out + 'URI:\\n{}\\n\\n'.format(req.uri)\n    out = out + 'ARGS:\\n{}\\n\\n'.format(req.args)\n    out = out + 'HEADERS IN:\\n{}\\n\\n'.format(yaml.safe_dump(dict(req.headers_in)))\n    if hasattr(req, 'cas'):\n        out = out + 'CAS:\\n{}\\n\\n'.format(yaml.safe_dump(req.cas))\n    out = out + 'FORM:\\n'\n    for f in req.form.list:\n        if f.filename:\n            v = 'FILE:{}'.format(f.filename)\n        else:\n            v = f.value\n        out = out + '{}: {}\\n'.format(f.name, v)\n    out = out + '\\n</pre></body></html>'\n    return out\n"}
{"path": "k8s/webtest/files/rc.py", "file_id": "k8s/webtest/files/rc.py", "component": "webtest", "type": "config", "profile": null, "k8s_kinds": [], "yaml_keys": [], "text": "from mod_python import apache, util\n\ndef index(req):\n    x = int(req.args)\n    if x >= 400:\n        raise apache.SERVER_RETURN(x)\n    if x >= 300:\n        util.redirect(req, req.construct_url('/'))\n", "bm25_text": "from mod_python import apache, util\n\ndef index(req):\n    x = int(req.args)\n    if x >= 400:\n        raise apache.SERVER_RETURN(x)\n    if x >= 300:\n        util.redirect(req, req.construct_url('/'))\n"}
{"path": "k8s/webtest/files/site.conf", "file_id": "k8s/webtest/files/site.conf", "component": "webtest", "type": "config", "profile": null, "k8s_kinds": [], "yaml_keys": [], "text": "LoadModule headers_module /usr/lib/apache2/modules/mod_headers.so\n\nPythonOption casauth.ServerUrlPrefix https://login.united-internet.org/ims-sso\nPythonOption casauth.ServiceUrlPrefix https://webtest.popp-mesh.fe-intg.poinfra.server.lan \nPythonOption casauth.HeaderPrefix CAS\n#PythonOption casauth.Version 3\n\n#<Location /-/bin/dump>\n#    PythonAccessHandler casauth::handler\n#</Location>\n\n<Location /-/static>\n    Header unset ETag\n    Header set Cache-Control \"max-age=0, no-cache, no-store, must-revalidate\"\n    Header set Pragma \"no-cache\"\n    Header set Expires \"Wed, 12 Jan 1980 05:00:00 GMT\"\n</Location>\n", "bm25_text": "LoadModule headers_module /usr/lib/apache2/modules/mod_headers.so\n\nPythonOption casauth.ServerUrlPrefix https://login.united-internet.org/ims-sso\nPythonOption casauth.ServiceUrlPrefix https://webtest.popp-mesh.fe-intg.poinfra.server.lan \nPythonOption casauth.HeaderPrefix CAS\n#PythonOption casauth.Version 3\n\n#<Location /-/bin/dump>\n#    PythonAccessHandler casauth::handler\n#</Location>\n\n<Location /-/static>\n    Header unset ETag\n    Header set Cache-Control \"max-age=0, no-cache, no-store, must-revalidate\"\n    Header set Pragma \"no-cache\"\n    Header set Expires \"Wed, 12 Jan 1980 05:00:00 GMT\"\n</Location>\n"}
{"path": "k8s/webtest/values/common.yaml", "file_id": "k8s/webtest/values/common.yaml", "component": "webtest", "type": "values", "profile": "common", "k8s_kinds": [], "yaml_keys": ["configMaps", "configMaps.casauth", "configMaps.casauth.content", "configMaps.casauth.content.casauth.py", "configMaps.casauth.mountPath", "configMaps.casauth.subPath", "configMaps.casauth.triggerReload", "configMaps.dump", "configMaps.dump.content", "configMaps.dump.content.dump.py", "configMaps.dump.mountPath", "configMaps.dump.subPath", "configMaps.dump.triggerReload", "configMaps.envvars", "configMaps.envvars.content", "configMaps.envvars.content.envvars", "configMaps.envvars.mountPath", "configMaps.envvars.subPath", "configMaps.envvars.triggerReload", "configMaps.local", "configMaps.local.content", "configMaps.local.content.local.txt", "configMaps.local.mountPath", "configMaps.local.subPath", "configMaps.local.triggerReload", "configMaps.rc", "configMaps.rc.content", "configMaps.rc.content.rc.py", "configMaps.rc.mountPath", "configMaps.rc.subPath", "configMaps.rc.triggerReload", "configMaps.site-config", "configMaps.site-config.content", "configMaps.site-config.content.site.conf", "configMaps.site-config.mountPath", "configMaps.site-config.subPath", "configMaps.site-config.triggerReload", "global", "global.app", "global.app.groupId", "global.app.monitoring", "global.app.monitoring.activate", "global.app.name", "global.ingresses", "global.ingresses.main", "global.ingresses.main.annotations", "global.ingresses.main.channel", "global.ingresses.main.hosts", "global.ingresses.main.tls", "global.ingresses.main.tls.certificate", "global.ingresses.main.tls.certificate.tls.crt", "global.ingresses.main.tls.certificate.tls.key", "global.ingresses.ui", "global.ingresses.ui.annotations", "global.ingresses.ui.channel", "global.ingresses.ui.hosts", "image", "image.repository", "image.tag", "mam", "mam.brand", "mam.dc", "mam.stage", "pdb", "pdb.enabled", "probes", "probes.readiness", "probes.readiness.activate", "probes.readiness.initialDelaySeconds", "probes.readiness.path", "resources", "resources.limits", "resources.limits.cpu", "resources.limits.memory", "resources.requests", "resources.requests.cpu", "resources.requests.memory"], "text": "image:\n  repository: internal/popp/modpython\n  tag: 1162-b068800-38\n\nmam: \n  dc: {{ .Env.MAM_DC }}\n  stage: {{ .Env.MAM_STAGE }}\n  brand: {{ .Env.MAM_BRAND }}\n\nglobal:\n  app:\n    name: {{ .Env.ARTIFACT_ID }}\n    groupId: no.group.id\n    monitoring:\n      activate: false\n  ingresses:\n    main:\n      channel: traefik2\n      hosts: \n        - popp-test.po.server.lan\n      annotations:\n        traefik.ingress.kubernetes.io/router.entrypoints: http,https\n      tls:\n        - hosts:\n            - popp-test.po.server.lan\n          {{/* secretName: {{ .Env.ARTIFACT_ID }}-{{ .Env.MAM_BRAND }}-{{ .Env.MAM_STAGE }}-tls */}}\n          certificate:\n            tls.crt: |\n{{ index (datasource \"vault\" \"ui/popp/secrets/data/certificates/puki-certificate-management-service/server/popp-test.po.server.lan\").data \"chain\" | indent 14 }}\n            tls.key: |\n{{ index (datasource \"vault\" \"ui/popp/secrets/data/certificates/puki-certificate-management-service/server/popp-test.po.server.lan\").data \"key\" | ind", "bm25_text": "image:\n  repository: internal/popp/modpython\n  tag: 1162-b068800-38\n\nmam: \n  dc: \"__TEMPLATE__\"\n  stage: \"__TEMPLATE__\"\n  brand: \"__TEMPLATE__\"\n\nglobal:\n  app:\n    name: \"__TEMPLATE__\"\n    groupId: no.group.id\n    monitoring:\n      activate: false\n  ingresses:\n    main:\n      channel: traefik2\n      hosts: \n        - popp-test.po.server.lan\n      annotations:\n        traefik.ingress.kubernetes.io/router.entrypoints: http,https\n      tls:\n        - hosts:\n            - popp-test.po.server.lan\n          \n          certificate:\n            tls.crt: |\n\"__TEMPLATE__\"\n            tls.key: |\n{{ index (datasource \"vault\" \"ui/popp/secrets/data/certificates/puki-certificate-management-service/server/popp-test.po.server.lan\").data \"key\" | ind"}
{"path": "k8s/webtest/values/common.yaml", "file_id": "k8s/webtest/values/common.yaml", "component": "webtest", "type": "values", "profile": "common", "k8s_kinds": [], "yaml_keys": [], "text": "ent 14 }}\n    ui:\n      channel: traefik2\n      hosts: \n        - test.popp-uipool.fe-intg-iz1-bs.poinfra.server.lan\n        - popp-test.po.server.lan\n      annotations:\n        traefik.ingress.kubernetes.io/router.entrypoints: http-uipool,https-uipool\n\nprobes:\n  readiness:\n    activate: true\n    path: /-/bin/ping\n    initialDelaySeconds: 5\n\n{{/*\nsecrets:\n  tls:\n    type: kubernetes.io/tls\n    content:\n      tls.crt: |\n{{ index (datasource \"vault\" \"ui/popp/secrets/data/certificates/puki-certificate-management-service/server/popp-test.po.server.lan\").data \"chain\" | indent 8 }}\n      tls.key: |\n{{ index (datasource \"vault\" \"ui/popp/secrets/data/certificates/puki-certificate-management-service/server/popp-test.po.server.lan\").data \"key\" | indent 8 }}\n*/}}\n\npdb:\n  enabled: false\n\nconfigMaps:\n  local:\n    triggerReload: true\n    mountPath: /var/www/static/local.txt\n    subPath: local.txt\n    content:\n      local.txt: |\n{{ .Env.CLUSTER | indent 8 }}\n  dump:\n    triggerReload: true\n    mountP", "bm25_text": "ent 14 }}\n    ui:\n      channel: traefik2\n      hosts: \n        - test.popp-uipool.fe-intg-iz1-bs.poinfra.server.lan\n        - popp-test.po.server.lan\n      annotations:\n        traefik.ingress.kubernetes.io/router.entrypoints: http-uipool,https-uipool\n\nprobes:\n  readiness:\n    activate: true\n    path: /-/bin/ping\n    initialDelaySeconds: 5\n\n\n\npdb:\n  enabled: false\n\nconfigMaps:\n  local:\n    triggerReload: true\n    mountPath: /var/www/static/local.txt\n    subPath: local.txt\n    content:\n      local.txt: |\n\"__TEMPLATE__\"\n  dump:\n    triggerReload: true\n    mountP"}
{"path": "k8s/webtest/values/common.yaml", "file_id": "k8s/webtest/values/common.yaml", "component": "webtest", "type": "values", "profile": "common", "k8s_kinds": [], "yaml_keys": [], "text": "ath: /var/www/bin/dump.py\n    subPath: dump.py\n    content:\n      dump.py: |\n{{ file.Read \"files/dump.py\" | indent 8 }}\n  rc:\n    triggerReload: true\n    mountPath: /var/www/bin/rc.py\n    subPath: rc.py\n    content:\n      rc.py: |\n{{ file.Read \"files/rc.py\" | indent 8 }}\n  site-config:\n    triggerReload: true\n    mountPath: /etc/apache2/sites-enabled/50-site.conf\n    subPath: site.conf\n    content:\n      site.conf: |\n{{ file.Read \"files/site.conf\" | indent 8 }}\n  envvars:\n    triggerReload: true\n    mountPath: /etc/apache2/envvars\n    subPath: envvars\n    content:\n      envvars: |\n{{ file.Read \"files/envvars\" | indent 8 }}\n{{- /*\n  casauth:\n    triggerReload: true\n    mountPath: /etc/apache2/casauth.py\n    subPath: casauth.py\n    content:\n      casauth.py: |\n{{ file.Read \"files/casauth.py\" | indent 8 }}\n*/ -}}\n\nresources:\n  requests:\n    cpu: 100m\n    memory: 256Mi\n  limits:\n    cpu: 1\n    memory: 1Gi\n\n", "bm25_text": "ath: /var/www/bin/dump.py\n    subPath: dump.py\n    content:\n      dump.py: |\n\"__TEMPLATE__\"\n  rc:\n    triggerReload: true\n    mountPath: /var/www/bin/rc.py\n    subPath: rc.py\n    content:\n      rc.py: |\n\"__TEMPLATE__\"\n  site-config:\n    triggerReload: true\n    mountPath: /etc/apache2/sites-enabled/50-site.conf\n    subPath: site.conf\n    content:\n      site.conf: |\n\"__TEMPLATE__\"\n  envvars:\n    triggerReload: true\n    mountPath: /etc/apache2/envvars\n    subPath: envvars\n    content:\n      envvars: |\n\"__TEMPLATE__\"\n{{- /*\n  casauth:\n    triggerReload: true\n    mountPath: /etc/apache2/casauth.py\n    subPath: casauth.py\n    content:\n      casauth.py: |\n\"__TEMPLATE__\"\n*/ -}}\n\nresources:\n  requests:\n    cpu: 100m\n    memory: 256Mi\n  limits:\n    cpu: 1\n    memory: 1Gi\n"}
{"path": "k8s/webtest/values/istio.yaml", "file_id": "k8s/webtest/values/istio.yaml", "component": "webtest", "type": "values", "profile": "istio", "k8s_kinds": [], "yaml_keys": ["istio", "istio.destinationRules", "istio.destinationRules.ha", "istio.destinationRules.ha.exportTo", "istio.destinationRules.ha.host", "istio.destinationRules.ha.trafficPolicy", "istio.destinationRules.ha.trafficPolicy.loadBalancer", "istio.destinationRules.ha.trafficPolicy.loadBalancer.localityLbSetting", "istio.destinationRules.ha.trafficPolicy.loadBalancer.localityLbSetting.enabled", "istio.destinationRules.ha.trafficPolicy.loadBalancer.localityLbSetting.failover", "istio.destinationRules.ha.trafficPolicy.loadBalancer.localityLbSetting.failover.to", "istio.destinationRules.ha.trafficPolicy.outlierDetection", "istio.destinationRules.ha.trafficPolicy.outlierDetection.maxEjectionPercent", "istio.destinationRules.ha.trafficPolicy.outlierDetection.minHealthPercent", "istio.destinationRules.ha.trafficPolicy.tls", "istio.destinationRules.ha.trafficPolicy.tls.mode", "istio.enabled", "istio.serviceEntries", "istio.serviceEntries.ha", "istio.serviceEntries.ha.exportTo", "istio.serviceEntries.ha.hosts", "istio.serviceEntries.ha.location", "istio.serviceEntries.ha.ports", "istio.serviceEntries.ha.ports.number", "istio.serviceEntries.ha.ports.protocol", "istio.serviceEntries.ha.resolution", "istio.serviceEntries.ha.workloadSelector", "istio.serviceEntries.ha.workloadSelector.labels", "istio.virtualServices", "istio.virtualServices.ha", "istio.virtualServices.ha.disableMeshInternalExposure", "istio.virtualServices.ha.exposedViaGateways", "istio.virtualServices.ha.hosts", "istio.virtualServices.ha.httpRoutes", "istio.virtualServices.ha.httpRoutes.host", "istio.workloadEntries", "istio.workloadEntries.remote", "istio.workloadEntries.remote.address", "istio.workloadEntries.remote.locality"], "text": "{{\n$remote := dict\n  \"bs\" (dict\n    \"dc\" \"bap\"\n    \"cluster\" \"fe-intg-iz2-bap\"\n    \"gw\" \"10.86.6.88\"\n    \"locality\" \"bap/iz2\"\n  )\n  \"bap\" (dict\n    \"dc\" \"bs\"\n    \"cluster\" \"fe-intg-iz1-bs\"\n    \"gw\" \"10.86.6.72\"\n    \"locality\" \"bs/iz1\"\n  )\n}}\n{{ $remote = index $remote .Env.MAM_DC }}\n{{ $ns := printf \"%s-%s-%s\" .Env.TENANT .Env.INFORMATION_SYSTEM .Env.MAM_STAGE }}\n{{ $instance := printf \"%s-%s-%s\" .Env.ARTIFACT_ID .Env.MAM_BRAND .Env.MAM_STAGE }}\n\nistio:\n  enabled: true\n  workloadEntries:\n    remote:\n      address: {{ index $remote \"gw\" }} # istio-ingressgateway-{{ .Env.TENANT }}-{{ index $remote \"cluster\" }}.poinfra.server.lan\n      locality: {{ index $remote \"locality\" }}\n  serviceEntries:\n    ha:\n      hosts:\n        - &HAHOST {{ $instance }}-ha.{{ $ns }}.svc.cluster.local\n      location: MESH_INTERNAL\n      ports:\n        - name: http\n          number: 8080\n          protocol: HTTP\n      workloadSelector:\n        labels:\n          app.kubernetes.io/instance: {{ $instance }}\n      ex", "bm25_text": "{{\n$remote := dict\n  \"bs\" (dict\n    \"dc\" \"bap\"\n    \"cluster\" \"fe-intg-iz2-bap\"\n    \"gw\" \"10.86.6.88\"\n    \"locality\" \"bap/iz2\"\n  )\n  \"bap\" (dict\n    \"dc\" \"bs\"\n    \"cluster\" \"fe-intg-iz1-bs\"\n    \"gw\" \"10.86.6.72\"\n    \"locality\" \"bs/iz1\"\n  )\n}}\n\"__TEMPLATE__\"\n\"__TEMPLATE__\"\n\"__TEMPLATE__\"\n\nistio:\n  enabled: true\n  workloadEntries:\n    remote:\n      address: \"__TEMPLATE__\" # istio-ingressgateway-\"__TEMPLATE__\"-\"__TEMPLATE__\".poinfra.server.lan\n      locality: \"__TEMPLATE__\"\n  serviceEntries:\n    ha:\n      hosts:\n        - &HAHOST \"__TEMPLATE__\"-ha.\"__TEMPLATE__\".svc.cluster.local\n      location: MESH_INTERNAL\n      ports:\n        - name: http\n          number: 8080\n          protocol: HTTP\n      workloadSelector:\n        labels:\n          app.kubernetes.io/instance: \"__TEMPLATE__\"\n      ex"}
{"path": "k8s/webtest/values/istio.yaml", "file_id": "k8s/webtest/values/istio.yaml", "component": "webtest", "type": "values", "profile": "istio", "k8s_kinds": [], "yaml_keys": [], "text": "portTo:\n        - .\n        - gocdmaster-{{ .Env.TENANT }}-helper\n      resolution: STATIC\n  destinationRules:\n    ha:\n      exportTo:\n        - .\n        - gocdmaster-{{ .Env.TENANT }}-helper\n      host: *HAHOST\n      trafficPolicy:\n        loadBalancer:\n          localityLbSetting:\n            enabled: true\n            failover:\n              - from: {{ .Env.MAM_DC }}\n                to: {{ index $remote \"dc\" }}\n        outlierDetection:\n          maxEjectionPercent: 0\n          minHealthPercent: 0\n        tls:\n          mode: ISTIO_MUTUAL\n  virtualServices:\n    ha:\n      disableMeshInternalExposure: true\n      exposedViaGateways:\n        - int\n      hosts:\n        - webtest.popp-mesh.fe-intg.poinfra.server.lan\n      httpRoutes:\n        - route:\n            - destination:\n                host: *HAHOST\n\n", "bm25_text": "portTo:\n        - .\n        - gocdmaster-\"__TEMPLATE__\"-helper\n      resolution: STATIC\n  destinationRules:\n    ha:\n      exportTo:\n        - .\n        - gocdmaster-\"__TEMPLATE__\"-helper\n      host: *HAHOST\n      trafficPolicy:\n        loadBalancer:\n          localityLbSetting:\n            enabled: true\n            failover:\n              - from: \"__TEMPLATE__\"\n                to: \"__TEMPLATE__\"\n        outlierDetection:\n          maxEjectionPercent: 0\n          minHealthPercent: 0\n        tls:\n          mode: ISTIO_MUTUAL\n  virtualServices:\n    ha:\n      disableMeshInternalExposure: true\n      exposedViaGateways:\n        - int\n      hosts:\n        - webtest.popp-mesh.fe-intg.poinfra.server.lan\n      httpRoutes:\n        - route:\n            - destination:\n                host: *HAHOST\n"}
{"path": "k8s/webtest/values/istio1.yaml", "file_id": "k8s/webtest/values/istio1.yaml", "component": "webtest", "type": "values", "profile": "istio1", "k8s_kinds": [], "yaml_keys": ["extraObjects", "extraObjects.kind", "extraObjects.metadata", "extraObjects.metadata.name", "extraObjects.metadata.namespace", "extraObjects.spec", "extraObjects.spec.address", "extraObjects.spec.exportTo", "extraObjects.spec.gateways", "extraObjects.spec.host", "extraObjects.spec.hosts", "extraObjects.spec.http", "extraObjects.spec.http.host", "extraObjects.spec.labels", "extraObjects.spec.locality", "extraObjects.spec.location", "extraObjects.spec.ports", "extraObjects.spec.ports.http", "extraObjects.spec.ports.number", "extraObjects.spec.ports.protocol", "extraObjects.spec.resolution", "extraObjects.spec.trafficPolicy", "extraObjects.spec.trafficPolicy.loadBalancer", "extraObjects.spec.trafficPolicy.loadBalancer.localityLbSetting", "extraObjects.spec.trafficPolicy.loadBalancer.localityLbSetting.enabled", "extraObjects.spec.trafficPolicy.loadBalancer.localityLbSetting.failover", "extraObjects.spec.trafficPolicy.loadBalancer.localityLbSetting.failover.to", "extraObjects.spec.trafficPolicy.outlierDetection", "extraObjects.spec.trafficPolicy.outlierDetection.maxEjectionPercent", "extraObjects.spec.trafficPolicy.outlierDetection.minHealthPercent", "extraObjects.spec.trafficPolicy.tls", "extraObjects.spec.trafficPolicy.tls.mode", "extraObjects.spec.workloadSelector", "extraObjects.spec.workloadSelector.labels", "global", "global.app", "global.app.annotations", "global.app.annotations.proxyMetadata", "global.app.annotations.proxyMetadata.ISTIO_META_DNS_AUTO_ALLOCATE", "global.app.annotations.proxyMetadata.ISTIO_META_DNS_CAPTURE", "global.app.labels"], "text": "{{\n$remote := dict\n  \"bs\" (dict\n    \"dc\" \"bap\"\n    \"cluster\" \"fe-intg-iz2-bap\"\n    \"gw\" \"10.86.6.88\"\n  )\n  \"bap\" (dict\n    \"dc\" \"bs\"\n    \"cluster\" \"fe-intg-iz1-bs\"\n    \"gw\" \"10.86.6.72\"\n  )\n}}\n{{ $remote = index $remote .Env.MAM_DC }}\n{{ $ns := printf \"%s-%s-%s\" .Env.TENANT .Env.INFORMATION_SYSTEM .Env.MAM_STAGE }}\n{{ $instance := printf \"%s-%s-%s\" .Env.ARTIFACT_ID .Env.MAM_BRAND .Env.MAM_STAGE }}\nglobal:\n  app:\n    labels:\n      sidecar.istio.io/inject: \"true\"\n    annotations:\n      proxy.istio.io/config: |\n        proxyMetadata:\n          ISTIO_META_DNS_AUTO_ALLOCATE: \"true\"\n          ISTIO_META_DNS_CAPTURE: \"true\"\n      sidecar.istio.io/rewriteAppHTTPProbers: \"true\"\n\nextraObjects:\n  - apiVersion: networking.istio.io/v1beta1\n    kind: WorkloadEntry\n    metadata:\n      name: {{ $instance }}-remote\n      namespace: {{ $ns }}\n    spec:\n      address: {{ index $remote \"gw\" }} # istio-ingressgateway-{{ .Env.TENANT }}-{{ index $remote \"cluster\" }}.poinfra.server.lan\n      locality: {{ inde", "bm25_text": "{{\n$remote := dict\n  \"bs\" (dict\n    \"dc\" \"bap\"\n    \"cluster\" \"fe-intg-iz2-bap\"\n    \"gw\" \"10.86.6.88\"\n  )\n  \"bap\" (dict\n    \"dc\" \"bs\"\n    \"cluster\" \"fe-intg-iz1-bs\"\n    \"gw\" \"10.86.6.72\"\n  )\n}}\n\"__TEMPLATE__\"\n\"__TEMPLATE__\"\n\"__TEMPLATE__\"\nglobal:\n  app:\n    labels:\n      sidecar.istio.io/inject: \"true\"\n    annotations:\n      proxy.istio.io/config: |\n        proxyMetadata:\n          ISTIO_META_DNS_AUTO_ALLOCATE: \"true\"\n          ISTIO_META_DNS_CAPTURE: \"true\"\n      sidecar.istio.io/rewriteAppHTTPProbers: \"true\"\n\nextraObjects:\n  - apiVersion: networking.istio.io/v1beta1\n    kind: WorkloadEntry\n    metadata:\n      name: \"__TEMPLATE__\"-remote\n      namespace: \"__TEMPLATE__\"\n    spec:\n      address: \"__TEMPLATE__\" # istio-ingressgateway-\"__TEMPLATE__\"-\"__TEMPLATE__\".poinfra.server.lan\n      locality: {{ inde"}
{"path": "k8s/webtest/values/istio1.yaml", "file_id": "k8s/webtest/values/istio1.yaml", "component": "webtest", "type": "values", "profile": "istio1", "k8s_kinds": [], "yaml_keys": [], "text": "x $remote \"dc\" }}\n      ports:\n        http: 15443\n      labels:\n        app.kubernetes.io/instance: {{ $instance }}\n  - apiVersion: networking.istio.io/v1beta1\n    kind: ServiceEntry\n    metadata:\n      name: {{ $instance }}-ha\n      namespace: {{ $ns }}\n    spec:\n      hosts:\n        - &HASVC {{ $instance }}-ha.{{ $ns }}.svc.cluster.local\n      location: MESH_INTERNAL\n      ports:\n        - name: http\n          number: 8080\n          protocol: HTTP\n      workloadSelector:\n        labels:\n          app.kubernetes.io/instance: {{ $instance }}\n      exportTo:\n        - .\n        - gocdmaster-{{ .Env.TENANT }}-helper\n      resolution: STATIC\n  - apiVersion: networking.istio.io/v1beta1\n    kind: DestinationRule\n    metadata:\n      name: {{ $instance }}-ha\n      namespace: {{ $ns }}\n    spec:\n      exportTo:\n        - .\n        - gocdmaster-{{ .Env.TENANT }}-helper\n      host: *HASVC\n      trafficPolicy:\n        loadBalancer:\n          localityLbSetting:\n            enabled: true\n         ", "bm25_text": "x $remote \"dc\" }}\n      ports:\n        http: 15443\n      labels:\n        app.kubernetes.io/instance: \"__TEMPLATE__\"\n  - apiVersion: networking.istio.io/v1beta1\n    kind: ServiceEntry\n    metadata:\n      name: \"__TEMPLATE__\"-ha\n      namespace: \"__TEMPLATE__\"\n    spec:\n      hosts:\n        - &HASVC \"__TEMPLATE__\"-ha.\"__TEMPLATE__\".svc.cluster.local\n      location: MESH_INTERNAL\n      ports:\n        - name: http\n          number: 8080\n          protocol: HTTP\n      workloadSelector:\n        labels:\n          app.kubernetes.io/instance: \"__TEMPLATE__\"\n      exportTo:\n        - .\n        - gocdmaster-\"__TEMPLATE__\"-helper\n      resolution: STATIC\n  - apiVersion: networking.istio.io/v1beta1\n    kind: DestinationRule\n    metadata:\n      name: \"__TEMPLATE__\"-ha\n      namespace: \"__TEMPLATE__\"\n    spec:\n      exportTo:\n        - .\n        - gocdmaster-\"__TEMPLATE__\"-helper\n      host: *HASVC\n      trafficPolicy:\n        loadBalancer:\n          localityLbSetting:\n            enabled: true\n         "}
{"path": "k8s/webtest/values/istio1.yaml", "file_id": "k8s/webtest/values/istio1.yaml", "component": "webtest", "type": "values", "profile": "istio1", "k8s_kinds": [], "yaml_keys": [], "text": "   failover:\n              - from: {{ .Env.MAM_DC }}\n                to: {{ index $remote \"dc\" }}\n        outlierDetection:\n          #splitExternalLocalOriginErrors: true\n          #consecutiveLocalOriginFailures: 3\n          #baseEjectionTime: 30s\n          #interval: 10s\n          #maxEjectionPercent: 100\n          maxEjectionPercent: 0\n          minHealthPercent: 0\n        tls:\n          mode: ISTIO_MUTUAL\n  - apiVersion: networking.istio.io/v1beta1\n    kind: VirtualService\n    metadata:\n      name: {{ $instance }}\n      namespace: {{ $ns }}\n    spec:\n      gateways:\n        - gocdmaster-{{ .Env.TENANT }}-helper/istio-ingressgateway-{{ .Env.TENANT }}\n      hosts:\n        - webtest.popp-mesh.fe-intg.poinfra.server.lan\n      http:\n        - route:\n            - destination:\n                host: *HASVC\n                #port:\n                #  number: 8080\n", "bm25_text": "   failover:\n              - from: \"__TEMPLATE__\"\n                to: \"__TEMPLATE__\"\n        outlierDetection:\n          #splitExternalLocalOriginErrors: true\n          #consecutiveLocalOriginFailures: 3\n          #baseEjectionTime: 30s\n          #interval: 10s\n          #maxEjectionPercent: 100\n          maxEjectionPercent: 0\n          minHealthPercent: 0\n        tls:\n          mode: ISTIO_MUTUAL\n  - apiVersion: networking.istio.io/v1beta1\n    kind: VirtualService\n    metadata:\n      name: \"__TEMPLATE__\"\n      namespace: \"__TEMPLATE__\"\n    spec:\n      gateways:\n        - gocdmaster-\"__TEMPLATE__\"-helper/istio-ingressgateway-\"__TEMPLATE__\"\n      hosts:\n        - webtest.popp-mesh.fe-intg.poinfra.server.lan\n      http:\n        - route:\n            - destination:\n                host: *HASVC\n                #port:\n                #  number: 8080"}
{"path": "k8s/webtest/values/istio11.yaml", "file_id": "k8s/webtest/values/istio11.yaml", "component": "webtest", "type": "values", "profile": "istio11", "k8s_kinds": [], "yaml_keys": ["istio", "istio.destinationRules", "istio.destinationRules.ha", "istio.destinationRules.ha.exportTo", "istio.destinationRules.ha.host", "istio.destinationRules.ha.trafficPolicy", "istio.destinationRules.ha.trafficPolicy.loadBalancer", "istio.destinationRules.ha.trafficPolicy.loadBalancer.localityLbSetting", "istio.destinationRules.ha.trafficPolicy.loadBalancer.localityLbSetting.enabled", "istio.destinationRules.ha.trafficPolicy.loadBalancer.localityLbSetting.failover", "istio.destinationRules.ha.trafficPolicy.loadBalancer.localityLbSetting.failover.to", "istio.destinationRules.ha.trafficPolicy.outlierDetection", "istio.destinationRules.ha.trafficPolicy.outlierDetection.maxEjectionPercent", "istio.destinationRules.ha.trafficPolicy.outlierDetection.minHealthPercent", "istio.destinationRules.ha.trafficPolicy.tls", "istio.destinationRules.ha.trafficPolicy.tls.mode", "istio.enabled", "istio.serviceEntries", "istio.serviceEntries.ha", "istio.serviceEntries.ha.exportTo", "istio.serviceEntries.ha.hosts", "istio.serviceEntries.ha.location", "istio.serviceEntries.ha.ports", "istio.serviceEntries.ha.ports.number", "istio.serviceEntries.ha.ports.protocol", "istio.serviceEntries.ha.resolution", "istio.serviceEntries.ha.workloadSelector", "istio.serviceEntries.ha.workloadSelector.labels", "istio.virtualServices", "istio.virtualServices.ha", "istio.virtualServices.ha.disableMeshInternalExposure", "istio.virtualServices.ha.exposedViaGateways", "istio.virtualServices.ha.hosts", "istio.virtualServices.ha.httpRoutes", "istio.virtualServices.ha.httpRoutes.host", "istio.workloadEntries", "istio.workloadEntries.remote", "istio.workloadEntries.remote.address", "istio.workloadEntries.remote.locality"], "text": "{{\n$remote := dict\n  \"bs\" (dict\n    \"dc\" \"bap\"\n    \"cluster\" \"fe-intg-iz2-bap\"\n    \"gw\" \"10.86.6.88\"\n    \"locality\" \"bap/iz2\"\n  )\n  \"bap\" (dict\n    \"dc\" \"bs\"\n    \"cluster\" \"fe-intg-iz1-bs\"\n    \"gw\" \"10.86.6.72\"\n    \"locality\" \"bs/iz1\"\n  )\n}}\n{{ $remote = index $remote .Env.MAM_DC }}\n{{ $ns := printf \"%s-%s-%s\" .Env.TENANT .Env.INFORMATION_SYSTEM .Env.MAM_STAGE }}\n{{ $instance := printf \"%s-%s-%s\" .Env.ARTIFACT_ID .Env.MAM_BRAND .Env.MAM_STAGE }}\n\nistio:\n  enabled: true\n  workloadEntries:\n    remote:\n      address: {{ index $remote \"gw\" }} # istio-ingressgateway-{{ .Env.TENANT }}-{{ index $remote \"cluster\" }}.poinfra.server.lan\n      locality: {{ index $remote \"locality\" }}\n  serviceEntries:\n    ha:\n      hosts:\n        - &HAHOST {{ $instance }}-ha.{{ $ns }}.svc.cluster.local\n      location: MESH_INTERNAL\n      ports:\n        - name: http\n          number: 8080\n          protocol: HTTP\n      workloadSelector:\n        labels:\n          app.kubernetes.io/instance: {{ $instance }}\n      ex", "bm25_text": "{{\n$remote := dict\n  \"bs\" (dict\n    \"dc\" \"bap\"\n    \"cluster\" \"fe-intg-iz2-bap\"\n    \"gw\" \"10.86.6.88\"\n    \"locality\" \"bap/iz2\"\n  )\n  \"bap\" (dict\n    \"dc\" \"bs\"\n    \"cluster\" \"fe-intg-iz1-bs\"\n    \"gw\" \"10.86.6.72\"\n    \"locality\" \"bs/iz1\"\n  )\n}}\n\"__TEMPLATE__\"\n\"__TEMPLATE__\"\n\"__TEMPLATE__\"\n\nistio:\n  enabled: true\n  workloadEntries:\n    remote:\n      address: \"__TEMPLATE__\" # istio-ingressgateway-\"__TEMPLATE__\"-\"__TEMPLATE__\".poinfra.server.lan\n      locality: \"__TEMPLATE__\"\n  serviceEntries:\n    ha:\n      hosts:\n        - &HAHOST \"__TEMPLATE__\"-ha.\"__TEMPLATE__\".svc.cluster.local\n      location: MESH_INTERNAL\n      ports:\n        - name: http\n          number: 8080\n          protocol: HTTP\n      workloadSelector:\n        labels:\n          app.kubernetes.io/instance: \"__TEMPLATE__\"\n      ex"}
{"path": "k8s/webtest/values/istio11.yaml", "file_id": "k8s/webtest/values/istio11.yaml", "component": "webtest", "type": "values", "profile": "istio11", "k8s_kinds": [], "yaml_keys": [], "text": "portTo:\n        - .\n        - gocdmaster-{{ .Env.TENANT }}-helper\n      resolution: STATIC\n  destinationRules:\n    ha:\n      exportTo:\n        - .\n        - gocdmaster-{{ .Env.TENANT }}-helper\n      host: *HAHOST\n      trafficPolicy:\n        loadBalancer:\n          localityLbSetting:\n            enabled: true\n            failover:\n              - from: {{ .Env.MAM_DC }}\n                to: {{ index $remote \"dc\" }}\n        outlierDetection:\n          maxEjectionPercent: 0\n          minHealthPercent: 0\n        tls:\n          mode: ISTIO_MUTUAL\n  virtualServices:\n    ha:\n      disableMeshInternalExposure: true\n      exposedViaGateways:\n        - int\n      hosts:\n        - webtest.popp-mesh.fe-intg.poinfra.server.lan\n      httpRoutes:\n        - route:\n            - destination:\n                host: *HAHOST\n\n", "bm25_text": "portTo:\n        - .\n        - gocdmaster-\"__TEMPLATE__\"-helper\n      resolution: STATIC\n  destinationRules:\n    ha:\n      exportTo:\n        - .\n        - gocdmaster-\"__TEMPLATE__\"-helper\n      host: *HAHOST\n      trafficPolicy:\n        loadBalancer:\n          localityLbSetting:\n            enabled: true\n            failover:\n              - from: \"__TEMPLATE__\"\n                to: \"__TEMPLATE__\"\n        outlierDetection:\n          maxEjectionPercent: 0\n          minHealthPercent: 0\n        tls:\n          mode: ISTIO_MUTUAL\n  virtualServices:\n    ha:\n      disableMeshInternalExposure: true\n      exposedViaGateways:\n        - int\n      hosts:\n        - webtest.popp-mesh.fe-intg.poinfra.server.lan\n      httpRoutes:\n        - route:\n            - destination:\n                host: *HAHOST\n"}
{"path": "k8s/webtest/values/istio2.yaml", "file_id": "k8s/webtest/values/istio2.yaml", "component": "webtest", "type": "values", "profile": "istio2", "k8s_kinds": [], "yaml_keys": ["extraObjects", "extraObjects.kind", "extraObjects.metadata", "extraObjects.metadata.name", "extraObjects.metadata.namespace", "extraObjects.spec", "extraObjects.spec.endpoints", "extraObjects.spec.endpoints.locality", "extraObjects.spec.endpoints.ports", "extraObjects.spec.endpoints.ports.http", "extraObjects.spec.endpoints.weight", "extraObjects.spec.exportTo", "extraObjects.spec.gateways", "extraObjects.spec.host", "extraObjects.spec.hosts", "extraObjects.spec.http", "extraObjects.spec.http.host", "extraObjects.spec.http.port", "extraObjects.spec.http.port.number", "extraObjects.spec.location", "extraObjects.spec.ports", "extraObjects.spec.ports.number", "extraObjects.spec.ports.port", "extraObjects.spec.ports.protocol", "extraObjects.spec.resolution", "extraObjects.spec.selector", "extraObjects.spec.trafficPolicy", "extraObjects.spec.trafficPolicy.tls", "extraObjects.spec.trafficPolicy.tls.mode", "global", "global.app", "global.app.annotations", "global.app.annotations.proxyMetadata", "global.app.annotations.proxyMetadata.ISTIO_META_DNS_AUTO_ALLOCATE", "global.app.annotations.proxyMetadata.ISTIO_META_DNS_CAPTURE", "global.app.labels"], "text": "{{\n$remote := dict\n  \"bs\" (dict\n    \"dc\" \"bap\"\n    \"cluster\" \"fe-intg-iz2-bap\"\n    \"gw\" \"10.86.6.88\"\n  )\n  \"bap\" (dict\n    \"dc\" \"bs\"\n    \"cluster\" \"fe-intg-iz1-bs\"\n    \"gw\" \"10.86.6.72\"\n  )\n}}\n{{ $remote = index $remote .Env.MAM_DC }}\n{{ $ns := printf \"%s-%s-%s\" .Env.TENANT .Env.INFORMATION_SYSTEM .Env.MAM_STAGE }}\n{{ $instance := printf \"%s-%s-%s\" .Env.ARTIFACT_ID .Env.MAM_BRAND .Env.MAM_STAGE }}\nglobal:\n  app:\n    labels:\n      sidecar.istio.io/inject: \"true\"\n    annotations:\n      proxy.istio.io/config: |\n        proxyMetadata:\n          ISTIO_META_DNS_AUTO_ALLOCATE: \"true\"\n          ISTIO_META_DNS_CAPTURE: \"true\"\n      sidecar.istio.io/rewriteAppHTTPProbers: \"true\"\n\nextraObjects:\n  - apiVersion: v1\n    kind: Service\n    metadata:\n      name: {{ $instance }}-{{ .Env.MAM_DC }}\n      namespace: {{ $ns }}\n    spec:\n      selector:\n        app.kubernetes.io/instance: {{ $instance }}\n      ports:\n        - protocol: TCP\n          port: 8080\n  - apiVersion: networking.istio.io/v1beta1\n   ", "bm25_text": "{{\n$remote := dict\n  \"bs\" (dict\n    \"dc\" \"bap\"\n    \"cluster\" \"fe-intg-iz2-bap\"\n    \"gw\" \"10.86.6.88\"\n  )\n  \"bap\" (dict\n    \"dc\" \"bs\"\n    \"cluster\" \"fe-intg-iz1-bs\"\n    \"gw\" \"10.86.6.72\"\n  )\n}}\n\"__TEMPLATE__\"\n\"__TEMPLATE__\"\n\"__TEMPLATE__\"\nglobal:\n  app:\n    labels:\n      sidecar.istio.io/inject: \"true\"\n    annotations:\n      proxy.istio.io/config: |\n        proxyMetadata:\n          ISTIO_META_DNS_AUTO_ALLOCATE: \"true\"\n          ISTIO_META_DNS_CAPTURE: \"true\"\n      sidecar.istio.io/rewriteAppHTTPProbers: \"true\"\n\nextraObjects:\n  - apiVersion: v1\n    kind: Service\n    metadata:\n      name: \"__TEMPLATE__\"-\"__TEMPLATE__\"\n      namespace: \"__TEMPLATE__\"\n    spec:\n      selector:\n        app.kubernetes.io/instance: \"__TEMPLATE__\"\n      ports:\n        - protocol: TCP\n          port: 8080\n  - apiVersion: networking.istio.io/v1beta1\n   "}
{"path": "k8s/webtest/values/istio2.yaml", "file_id": "k8s/webtest/values/istio2.yaml", "component": "webtest", "type": "values", "profile": "istio2", "k8s_kinds": [], "yaml_keys": [], "text": " kind: ServiceEntry\n    metadata:\n      name: {{ $instance }}-ha\n      namespace: {{ $ns }}\n    spec:\n      hosts:\n        - &HASVC {{ $instance }}-{{ index $remote \"dc\" }}.{{ $ns }}.svc.cluster.local\n      location: MESH_INTERNAL\n      ports:\n        - name: http\n          number: 8080\n          protocol: HTTP\n      exportTo:\n        - .\n        - gocdmaster-{{ .Env.TENANT }}-helper\n      resolution: DNS\n      endpoints:\n        - address: istio-ingressgateway-{{ .Env.TENANT }}-{{ index $remote \"cluster\" }}.poinfra.server.lan\n          ports:\n            http: 15443\n          weight: 0\n          locality: {{ index $remote \"dc\" }}\n        - address: {{ $instance }}.{{ $ns }}.svc.cluster.local\n          ports:\n            http: 8080\n          weight: 100\n          locality: {{ .Env.MAM_DC }}\n  - apiVersion: networking.istio.io/v1beta1\n    kind: DestinationRule\n    metadata:\n      name: {{ $instance }}-ha\n      namespace: {{ $ns }}\n    spec:\n      exportTo:\n        - .\n        - gocdmast", "bm25_text": " kind: ServiceEntry\n    metadata:\n      name: \"__TEMPLATE__\"-ha\n      namespace: \"__TEMPLATE__\"\n    spec:\n      hosts:\n        - &HASVC \"__TEMPLATE__\"-\"__TEMPLATE__\".\"__TEMPLATE__\".svc.cluster.local\n      location: MESH_INTERNAL\n      ports:\n        - name: http\n          number: 8080\n          protocol: HTTP\n      exportTo:\n        - .\n        - gocdmaster-\"__TEMPLATE__\"-helper\n      resolution: DNS\n      endpoints:\n        - address: istio-ingressgateway-\"__TEMPLATE__\"-\"__TEMPLATE__\".poinfra.server.lan\n          ports:\n            http: 15443\n          weight: 0\n          locality: \"__TEMPLATE__\"\n        - address: \"__TEMPLATE__\".\"__TEMPLATE__\".svc.cluster.local\n          ports:\n            http: 8080\n          weight: 100\n          locality: \"__TEMPLATE__\"\n  - apiVersion: networking.istio.io/v1beta1\n    kind: DestinationRule\n    metadata:\n      name: \"__TEMPLATE__\"-ha\n      namespace: \"__TEMPLATE__\"\n    spec:\n      exportTo:\n        - .\n        - gocdmast"}
{"path": "k8s/webtest/values/istio2.yaml", "file_id": "k8s/webtest/values/istio2.yaml", "component": "webtest", "type": "values", "profile": "istio2", "k8s_kinds": [], "yaml_keys": [], "text": "er-{{ .Env.TENANT }}-helper\n      host: *HASVC\n      trafficPolicy:\n        tls:\n          mode: ISTIO_MUTUAL\n  - apiVersion: networking.istio.io/v1beta1\n    kind: VirtualService\n    metadata:\n      name: {{ $instance }}\n      namespace: {{ $ns }}\n    spec:\n      gateways:\n        - gocdmaster-{{ .Env.TENANT }}-helper/istio-ingressgateway-{{ .Env.TENANT }}\n      hosts:\n        - webtest.popp-mesh.fe-intg.poinfra.server.lan\n      http:\n        - route:\n            - destination:\n                host: *HASVC\n                port:\n                  number: 8080\n", "bm25_text": "er-\"__TEMPLATE__\"-helper\n      host: *HASVC\n      trafficPolicy:\n        tls:\n          mode: ISTIO_MUTUAL\n  - apiVersion: networking.istio.io/v1beta1\n    kind: VirtualService\n    metadata:\n      name: \"__TEMPLATE__\"\n      namespace: \"__TEMPLATE__\"\n    spec:\n      gateways:\n        - gocdmaster-\"__TEMPLATE__\"-helper/istio-ingressgateway-\"__TEMPLATE__\"\n      hosts:\n        - webtest.popp-mesh.fe-intg.poinfra.server.lan\n      http:\n        - route:\n            - destination:\n                host: *HASVC\n                port:\n                  number: 8080"}
{"path": "k8s/webtest/values/istio3.yaml", "file_id": "k8s/webtest/values/istio3.yaml", "component": "webtest", "type": "values", "profile": "istio3", "k8s_kinds": [], "yaml_keys": ["extraObjects", "extraObjects.kind", "extraObjects.metadata", "extraObjects.metadata.name", "extraObjects.metadata.namespace", "extraObjects.spec", "extraObjects.spec.endpoints", "extraObjects.spec.endpoints.ports", "extraObjects.spec.endpoints.ports.http", "extraObjects.spec.exportTo", "extraObjects.spec.gateways", "extraObjects.spec.host", "extraObjects.spec.hosts", "extraObjects.spec.http", "extraObjects.spec.http.host", "extraObjects.spec.http.port", "extraObjects.spec.http.port.number", "extraObjects.spec.http.weight", "extraObjects.spec.http.weight.host", "extraObjects.spec.http.weight.port", "extraObjects.spec.http.weight.port.number", "extraObjects.spec.location", "extraObjects.spec.ports", "extraObjects.spec.ports.number", "extraObjects.spec.ports.port", "extraObjects.spec.ports.protocol", "extraObjects.spec.resolution", "extraObjects.spec.selector", "extraObjects.spec.trafficPolicy", "extraObjects.spec.trafficPolicy.tls", "extraObjects.spec.trafficPolicy.tls.mode", "global", "global.app", "global.app.annotations", "global.app.annotations.proxyMetadata", "global.app.annotations.proxyMetadata.ISTIO_META_DNS_AUTO_ALLOCATE", "global.app.annotations.proxyMetadata.ISTIO_META_DNS_CAPTURE", "global.app.labels"], "text": "{{\n$remote := dict\n  \"bs\" (dict\n    \"dc\" \"bap\"\n    \"cluster\" \"fe-intg-iz2-bap\"\n    \"gw\" \"10.86.6.88\"\n  )\n  \"bap\" (dict\n    \"dc\" \"bs\"\n    \"cluster\" \"fe-intg-iz1-bs\"\n    \"gw\" \"10.86.6.72\"\n  )\n}}\n{{ $remote = index $remote .Env.MAM_DC }}\n{{ $ns := printf \"%s-%s-%s\" .Env.TENANT .Env.INFORMATION_SYSTEM .Env.MAM_STAGE }}\n{{ $instance := printf \"%s-%s-%s\" .Env.ARTIFACT_ID .Env.MAM_BRAND .Env.MAM_STAGE }}\nglobal:\n  app:\n    labels:\n      sidecar.istio.io/inject: \"true\"\n    annotations:\n      proxy.istio.io/config: |\n        proxyMetadata:\n          ISTIO_META_DNS_AUTO_ALLOCATE: \"true\"\n          ISTIO_META_DNS_CAPTURE: \"true\"\n      sidecar.istio.io/rewriteAppHTTPProbers: \"true\"\n\nextraObjects:\n  - apiVersion: v1\n    kind: Service\n    metadata:\n      name: {{ $instance }}-{{ .Env.MAM_DC }}\n      namespace: {{ $ns }}\n    spec:\n      selector:\n        app.kubernetes.io/instance: {{ $instance }}\n      ports:\n        - protocol: TCP\n          port: 8080\n  - apiVersion: networking.istio.io/v1beta1\n   ", "bm25_text": "{{\n$remote := dict\n  \"bs\" (dict\n    \"dc\" \"bap\"\n    \"cluster\" \"fe-intg-iz2-bap\"\n    \"gw\" \"10.86.6.88\"\n  )\n  \"bap\" (dict\n    \"dc\" \"bs\"\n    \"cluster\" \"fe-intg-iz1-bs\"\n    \"gw\" \"10.86.6.72\"\n  )\n}}\n\"__TEMPLATE__\"\n\"__TEMPLATE__\"\n\"__TEMPLATE__\"\nglobal:\n  app:\n    labels:\n      sidecar.istio.io/inject: \"true\"\n    annotations:\n      proxy.istio.io/config: |\n        proxyMetadata:\n          ISTIO_META_DNS_AUTO_ALLOCATE: \"true\"\n          ISTIO_META_DNS_CAPTURE: \"true\"\n      sidecar.istio.io/rewriteAppHTTPProbers: \"true\"\n\nextraObjects:\n  - apiVersion: v1\n    kind: Service\n    metadata:\n      name: \"__TEMPLATE__\"-\"__TEMPLATE__\"\n      namespace: \"__TEMPLATE__\"\n    spec:\n      selector:\n        app.kubernetes.io/instance: \"__TEMPLATE__\"\n      ports:\n        - protocol: TCP\n          port: 8080\n  - apiVersion: networking.istio.io/v1beta1\n   "}
{"path": "k8s/webtest/values/istio3.yaml", "file_id": "k8s/webtest/values/istio3.yaml", "component": "webtest", "type": "values", "profile": "istio3", "k8s_kinds": [], "yaml_keys": [], "text": " kind: ServiceEntry\n    metadata:\n      name: {{ $instance }}-ha\n      namespace: {{ $ns }}\n    spec:\n      hosts:\n        - &HASVC {{ $instance }}-{{ index $remote \"dc\" }}.{{ $ns }}.svc.cluster.local\n      location: MESH_INTERNAL\n      ports:\n        - name: http\n          number: 8080\n          protocol: HTTP\n      exportTo:\n        - .\n        - gocdmaster-{{ .Env.TENANT }}-helper\n      resolution: DNS\n      endpoints:\n        - address: istio-ingressgateway-{{ .Env.TENANT }}-{{ index $remote \"cluster\" }}.poinfra.server.lan\n          ports:\n            http: 15443\n  - apiVersion: networking.istio.io/v1beta1\n    kind: DestinationRule\n    metadata:\n      name: {{ $instance }}-ha\n      namespace: {{ $ns }}\n    spec:\n      exportTo:\n        - .\n        - gocdmaster-{{ .Env.TENANT }}-helper\n      host: *HASVC\n      trafficPolicy:\n        tls:\n          mode: ISTIO_MUTUAL\n  - apiVersion: networking.istio.io/v1beta1\n    kind: VirtualService\n    metadata:\n      name: {{ $instance }}\n      n", "bm25_text": " kind: ServiceEntry\n    metadata:\n      name: \"__TEMPLATE__\"-ha\n      namespace: \"__TEMPLATE__\"\n    spec:\n      hosts:\n        - &HASVC \"__TEMPLATE__\"-\"__TEMPLATE__\".\"__TEMPLATE__\".svc.cluster.local\n      location: MESH_INTERNAL\n      ports:\n        - name: http\n          number: 8080\n          protocol: HTTP\n      exportTo:\n        - .\n        - gocdmaster-\"__TEMPLATE__\"-helper\n      resolution: DNS\n      endpoints:\n        - address: istio-ingressgateway-\"__TEMPLATE__\"-\"__TEMPLATE__\".poinfra.server.lan\n          ports:\n            http: 15443\n  - apiVersion: networking.istio.io/v1beta1\n    kind: DestinationRule\n    metadata:\n      name: \"__TEMPLATE__\"-ha\n      namespace: \"__TEMPLATE__\"\n    spec:\n      exportTo:\n        - .\n        - gocdmaster-\"__TEMPLATE__\"-helper\n      host: *HASVC\n      trafficPolicy:\n        tls:\n          mode: ISTIO_MUTUAL\n  - apiVersion: networking.istio.io/v1beta1\n    kind: VirtualService\n    metadata:\n      name: \"__TEMPLATE__\"\n      n"}
{"path": "k8s/webtest/values/istio3.yaml", "file_id": "k8s/webtest/values/istio3.yaml", "component": "webtest", "type": "values", "profile": "istio3", "k8s_kinds": [], "yaml_keys": [], "text": "amespace: {{ $ns }}\n    spec:\n      gateways:\n        - gocdmaster-{{ .Env.TENANT }}-helper/istio-ingressgateway-{{ .Env.TENANT }}\n      hosts:\n        - webtest.popp-mesh.fe-intg.poinfra.server.lan\n      http:\n        - route:\n            - destination:\n                host: {{ $instance }}.{{ $ns }}.svc.cluster.local\n                port:\n                  number: 8080\n              weight: 100\n            - destination:\n                host: *HASVC\n                port:\n                  number: 8080\n              weight: 0\n", "bm25_text": "amespace: \"__TEMPLATE__\"\n    spec:\n      gateways:\n        - gocdmaster-\"__TEMPLATE__\"-helper/istio-ingressgateway-\"__TEMPLATE__\"\n      hosts:\n        - webtest.popp-mesh.fe-intg.poinfra.server.lan\n      http:\n        - route:\n            - destination:\n                host: \"__TEMPLATE__\".\"__TEMPLATE__\".svc.cluster.local\n                port:\n                  number: 8080\n              weight: 100\n            - destination:\n                host: *HASVC\n                port:\n                  number: 8080\n              weight: 0"}
